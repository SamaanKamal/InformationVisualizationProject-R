data("airquality")
x <-(airquality$Temp-32)*5/9
hist(x,main = "Maximum daily temperature at La Guardia Airport” , xlab =“Temperature in degrees Celsius")
data("airquality")
x <-(airquality$Temp-32)*5/9
hist(x,main = "Maximum daily temperature at La Guardia Airport” , xlab =“Temperature in degrees Celsius")
data("airquality")
x <-(airquality$Temp-32)*5/9
hist(x,main = "Maximum daily temperature at La Guardia Airport" , xlab =“Temperature in degrees Celsius")
data("airquality")
x <-(airquality$Temp-32)*5/9
hist(x,main = "Maximum daily temperature at La Guardia Airport" , xlab ="Temperature in degrees Celsius")
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [")
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [")
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [",average)
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [",average,med)
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [",average,med)
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [",average,)
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [",average)
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [" ,slices," ]")
pie(slices,labels = lbls)
data("airquality")
average<-mean(airquality$Temp)
med<- median(airquality$Temp)
minimum<-min(airquality$Temp)
maximum<-max(airquality$Temp)
slices<-c(average,med,maximum,minimum)
lbls<-c("mean", "median" , "min" , "max")
lbls<-paste(lbls,"= [" ,slices,"]")
pie(slices,labels = lbls)
data("Sleep")
sleep$group <- as.numeric(sleep$group)
sleep$ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ sleep$group + sleep$ID )
summary(result)
cor(sleep$extra,sleep$group)
data = as.data.frame(Titanic)
x = naivebyaes(data$survived~data$class+data$sex+data$age, data= data)
predict(x,data)
#task_6
data("Sleep")
sleep$group <- as.numeric(sleep$group)
sleep$ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ sleep$group + sleep$ID )
summary(result)
cor(sleep$extra,sleep$group)
#task_6
data = sleep
numeric_group <- as.numeric(sleep$group)
numeric_ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ numeric_group + numeric_ID )
summary(result)
correlation = cor(sleep$extra,numeric_group)
print(correlation)
#task_6
data = sleep
numeric_group <- as.numeric(sleep$group)
numeric_ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ numeric_group + numeric_ID )
summary(result)
correlation = cor(sleep$extra,numeric_group)
print(correlation)
print(data)
library(datasets)
library(tree)
library(dplyr)
library(e1071)
data = sleep
print(data)
#task1
for(i in sleep$extra)
{
if (i>0)
{print("more sleep")}
else if(i<0)
{print("less sleep")}
else
print("neutral")
}
#task2
data(sleep)
groupColumn <- as.numeric(levels(sleep$group))[sleep$group]
plot(groupColumn,main = "This is the sleep hours",ylab = "extra sleeps",cex = 3,type = "b")
#task3
boxplot(sleep,col = rainbow(6),ylab="sleep")
text(x=1,y=2,labels="groups")
text(x=2,y=3,labels="groups")
text(x=3,y=7,labels="groups")
library(datasets)
library(tree)
library(dplyr)
library(e1071)
data = sleep
#task4
data_wrangeled_4 <- sleep %>%
#filter(Sepal.Length >= 7.0)
filter(group==1 & extra < 1)
data_wrangeled_4
#task5
data_wrangeled_5 <- sleep %>%
group_by(group) %>%
summarize(extra.mean=mean(extra),extra.sd=sqrt(var(extra)))
data_wrangeled_5
#task6
numeric_group <- as.numeric(sleep$group)
numeric_ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ numeric_group + numeric_ID )
summary(result)
correlation = cor(sleep$extra,numeric_group)
print(correlation)
#Bonus
#Naive Bayes classification
model <- naiveBayes(group~ ., data)
v=predict(model, as.data.frame(data))
table(v)
#Bonus
#Naive Bayes classification
model <- naiveBayes(group~ ., data)
v=predict(model, as.data.frame(data))
table(v)
#Descion tree classification
#classify Extra
ExtraTree<-tree(extra~.,sleep)
text(ExtraTree)
plot(ExtraTree)
plot(ExtraTree, type ="uniform")
text(ExtraTree,all = TRUE)
#classify Group
Grouptree<-tree(group~.,sleep)
text(Grouptree)
plot(Grouptree)
plot(Grouptree, type ="uniform")
text(Grouptree,all = TRUE)
library(datasets)
library(tree)
library(dplyr)
library(e1071)
data = sleep
print(data)
#task1
for(i in sleep$extra)
{
if (i>0)
{print("more sleep")}
else if(i<0)
{print("less sleep")}
else
print("neutral")
}
#task2
data(sleep)
groupColumn <- as.numeric(levels(sleep$group))[sleep$group]
plot(groupColumn,main = "This is the sleep hours",ylab = "extra sleeps",cex = 3,type = "b")
#task3
boxplot(sleep,col = rainbow(6),ylab="sleep")
text(x=1,y=2,labels="groups")
text(x=2,y=3,labels="groups")
text(x=3,y=7,labels="groups")
#task4
data_wrangeled_4 <- sleep %>%
#filter(Sepal.Length >= 7.0)
filter(group==1 & extra < 1)
data_wrangeled_4
#task6
numeric_group <- as.numeric(sleep$group)
numeric_ID <- as.numeric(sleep$ID)
result<-lm(sleep$extra ~ numeric_group + numeric_ID )
summary(result)
correlation = cor(sleep$extra,numeric_group)
print(correlation)
#Bonus
#Bonus
#Naive Bayes classification
model <- naiveBayes(group~ ., data)
v=predict(model, as.data.frame(data))
table(v)
#Decision tree classification
#classify Group
Grouptree<-tree(group~.,sleep)
text(Grouptree)
plot(Grouptree)
plot(Grouptree, type ="uniform")
text(Grouptree,all = TRUE)
data_wrangeled_4 <- sleep %>%
#filter(Sepal.Length >= 7.0)
filter(group==1 & extra < 1)
data_wrangeled_4
shiny::runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
shiny::runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
shiny::runApp('D:/fcis/7th semster/Information Visualization/Labs/Project/The 1970s in the USA')
